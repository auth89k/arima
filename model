# -*- coding: utf-8 -*-
"""
Created on Thu Jan 30 20:31:09 2020

@author: yhkwon
"""

import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.font_manager as fm
import seaborn as sns
import numpy as np
from keras import backend as K
from statsmodels.graphics.tsaplots import plot_acf, plot_pacf
from statsmodels.tsa.arima_model import ARIMA
#from statsmodels.tsa.arima_model import ARIMAResults

#font 설정
font_path = "c:\\Windows\Fonts\malgun.ttf"
font_name=fm.FontProperties(fname=font_path).get_name()
plt.rcParams['font.family']=font_name

## Prepare dataset
dataset = pd.read_excel('ipm_final.xlsx')

dataset=dataset.drop(columns=['O/B', 'I/B'])
dataset=dataset[(dataset['노출']!=0) & (dataset['클릭']!=0)]
dataset=dataset.reset_index(drop=True)

df=dataset
df["일자"]=df["일자"].astype(str)
idx=df["일자"].str.contains('2018|2019')
df=df.loc[idx]
df=df.drop(columns=['IPM 키워드',"CTR", "CPC", "CPR"])
df["일자"]=df["일자"].astype('datetime64[ns]')

df=df.groupby(['일자'], as_index=False).sum()
df=df.rename(columns={"일자":"DATE","노출":"SHOW","클릭":"CLICK","비용":"COST","O/B+I/B":"GOAL"})
df=df.set_index("DATE")
df=df[:].astype(np.float)

df=df.drop(columns=["SHOW","CLICK","GOAL"])
df.plot()
plt.show()

# ACF/PACF
plot_acf(df)
plot_pacf(df)
plt.figure()
plt.show()

# 차분 후 ACF/PACF
diff_1=df.diff(periods=3).iloc[1:]
diff_1.plot()
plot_acf(diff_1)
plot_pacf(diff_1)
plt.show()

# 모델링
model=ARIMA(df,order=(1,1,3))
model_fit=model.fit(trend='nc',full_output=True, disp=False)
print(model_fit.summary())

# 모형 예측
model_fit.plot_predict()
fore=model_fit.forecast(steps=27)
#print(fore)
test_pred=pd.DataFrame(fore[0])
print(test_pred.sum())

heat_m=sns.heatmap(data = df.corr(), annot=True, fmt = '.2f', cmap='Blues')
heat_m.get_ylim()
heat_m.set_ylim(5,0)
heat_m

df1=df.reset_index()

for i in range(0,len(df1.columns)):
    if df1.columns[i] != "DATE":
        print(df1.columns[i])
        #plt.figure(figsize=(15,15))
        plt.plot(df1["DATE"],df1[df1.columns[i]])
        plt.xlabel("DATE")
        plt.ylabel(df1.columns[i])
        plt.legend(df1.columns[i])
        plt.show()
